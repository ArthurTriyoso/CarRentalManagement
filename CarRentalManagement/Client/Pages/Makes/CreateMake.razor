@page "/makes/create/"
@inject HttpClient _client
@inject NavigationManager _navManager
<h3 class=" card.title"> Create New Makes</h3>
<hr />
<br />
<EditForm Model="@make" OnValidSubmit="CreateNewMake">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="form-group">
		<label> Name: </label>
		<div>
			<div>
				<InputText @bind-Value="make.Name" class="form-control">
					<ValidationMessage For="@(() => make.Name)" />
				</InputText>
			</div>
		</div>
	</div>
	<button type="submit" class="btn btn-success btn-block">
		Create Make
	</button>
</EditForm>

@code {
	Make make = new Make();

	private IList<Make>? Makes;
	private IList<Model>? Models;
	private IList<Colour>? Colours;

	protected async override Task OnInitializedAsync()
	{
		Makes = await _client.GetFromJsonAsync<List<Make>>($"{Endpoints.MakesEndpoint}");
		Models = await _client.GetFromJsonAsync<List<Model>>($"{Endpoints.ModelsEndpoint}");
		Colours = await _client.GetFromJsonAsync<List<Colour>>($"{Endpoints.ColoursEndpoint}");
	}

	private async Task CreateNewMake()
	{
		await _client.PostAsJsonAsync(Endpoints.MakesEndpoint, make);
		_navManager.NavigateTo("/makes");
	}
}
